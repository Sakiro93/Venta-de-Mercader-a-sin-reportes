--CREAMOS LA BASE DE DATOS
CREATE DATABASE VENTA_MERCADERIA
--USAR BASE DE DATOS
GO
USE VENTA_MERCADERIA
--AUTORIZAR BASE DE DATOS
GO
ALTER AUTHORIZATION ON DATABASE:: VENTA_MERCADERIA TO SA

------------------------CREACION DE TABLAS------------------------
--CREACION DE LAS TABLAS FUERTES
GO
CREATE TABLE CATEGORIA
(IDCATEGORIA INT PRIMARY KEY IDENTITY,
DESCRIPCION VARCHAR(50) UNIQUE NOT NULL)

CREATE TABLE COLOR
(IDCOLOR INT PRIMARY KEY IDENTITY,
NOMBRE VARCHAR(20) UNIQUE NOT NULL)

CREATE TABLE TALLA
(IDTALLA INT PRIMARY KEY IDENTITY,
NOMBRE VARCHAR(100) UNIQUE NOT NULL)

CREATE TABLE PROVEEDOR
(IDPROVEEDOR INT PRIMARY KEY IDENTITY,
RAZONSOCIAL VARCHAR(50) UNIQUE NOT NULL,
RUC VARCHAR(13) UNIQUE NOT NULL, TELEFONO VARCHAR(10)UNIQUE NOT NULL,
EMAIL VARCHAR(30), DIRECCION VARCHAR(50) NOT NULL)

CREATE TABLE CLIENTE
(IDCLIENTE INT PRIMARY KEY IDENTITY,
CEDULA VARCHAR(10) UNIQUE NOT NULL,
NOMBRES VARCHAR(50) NOT NULL, TELEFONO VARCHAR(10),
EMAIL VARCHAR(30), SEXO BIT DEFAULT (0))

--CREACION DE LAS TABLAS DEBILES
GO
CREATE TABLE VENTA
(IDVENTA INT PRIMARY KEY IDENTITY,
IDCLIENTE INT REFERENCES CLIENTE (IDCLIENTE),
FREGISTRO DATE, 
SUBTOTAL REAL CHECK (SUBTOTAL >=0),IVA REAL CHECK (IVA >=0),TOTAL REAL CHECK (TOTAL >=0))

CREATE TABLE CALZADO
(IDCALZADO INT PRIMARY KEY IDENTITY,
NOMBRE VARCHAR(100) NOT NULL,
IDCATEGORIA INT REFERENCES CATEGORIA (IDCATEGORIA) NOT NULL,
IDTALLA INT REFERENCES TALLA (IDTALLA)NOT NULL,
IDCOLOR INT REFERENCES COLOR (IDCOLOR) NOT NULL,
GENERO BIT DEFAULT (0), PRECIO REAL CHECK (PRECIO >=0), STOCK INT CHECK (STOCK >=0))

CREATE TABLE INVENTARIO
(IDINVENTARIO INT PRIMARY KEY IDENTITY,
IDPROVEEDOR INT REFERENCES PROVEEDOR (IDPROVEEDOR),
IDCALZADO INT REFERENCES CALZADO (IDCALZADO),
FREGISTRO DATE DEFAULT (GETDATE()), CANTIDAD INT CHECK(CANTIDAD >=0), COMENTARIO VARCHAR(100))

CREATE TABLE DETALLE
(IDVENTA INT REFERENCES VENTA (IDVENTA),
IDCALZADO INT REFERENCES CALZADO (IDCALZADO),
CANTIDAD INT CHECK(CANTIDAD >=0), PRECIO REAL CHECK (PRECIO >=0))

--TABLAS DE AUDITORIA
CREATE TABLE AUDIT_CATEGORIA
(IDCAT INT,
DESCRIPCION VARCHAR(50),
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_COLOR
(IDCOL INT,
NOMBRE VARCHAR(20),
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_TALLA
(IDTAL INT,
NOMBRE VARCHAR(40),
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_PROVEEDOR
(IDPROV INT,
RAZONSOCIAL VARCHAR(50),
RUC VARCHAR(13), TELEFONO VARCHAR(10),
EMAIL VARCHAR(30), DIRECCION VARCHAR(50),
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_CLIENTE
(IDCLI INT,
CEDULA VARCHAR(10),
NOMBRES VARCHAR(50), TELEFONO VARCHAR(10),
EMAIL VARCHAR(30), SEXO BIT,
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_VENTA
(IDVENTA INT,
IDCLIENTE INT,
FREGISTRO DATE, 
SUBTOTAL REAL,IVA REAL,TOTAL REAL,
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_DETALLE
(IDVENTA INT,
IDCALZADO INT,
CANTIDAD INT, PRECIO REAL,
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_INVENTARIO
(IDINVENTARIO INT,
IDPROVEEDOR INT,
IDCALZADO INT,
FREGISTRO DATE, CANTIDAD INT,COMENTARIO VARCHAR(100),
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

CREATE TABLE AUDIT_CALZADO
(IDCALZADO INT,
NOMBRE VARCHAR(100),
IDCATEGORIA INT,
IDTALLA INT,
IDCOLOR INT,
GENERO BIT, PRECIO REAL, STOCK INT,
FECHA DATE, HORA TIME,
USUARIO VARCHAR(40),ESTACION VARCHAR(40),
TIPO CHAR(1))

-------------------------------CREACION DE INDICES-----------------------------------
-----------INDICE CON DUPLICADOS
--CLIENTE
GO
CREATE INDEX IX_IDCLIENTE ON CLIENTE(IDCLIENTE) 
GO
CREATE INDEX IX_CEDULA ON CLIENTE(CEDULA) 
GO
CREATE INDEX IX_NOMBRES ON CLIENTE(NOMBRES)
GO
CREATE INDEX IX_CLIENTE ON CLIENTE(IDCLIENTE,CEDULA,NOMBRES)

--INVENTARIO
GO
CREATE INDEX IX_IDINVENTARIO ON INVENTARIO(IDINVENTARIO)
--PROVEEDOR
GO
CREATE INDEX IX_IDPROVEEDOR ON PROVEEDOR(IDPROVEEDOR)
GO
CREATE INDEX IX_RAZONSOCIAL ON PROVEEDOR(RAZONSOCIAL)
GO
CREATE INDEX IX_PROVEEDOR ON PROVEEDOR(IDPROVEEDOR,RAZONSOCIAL)
--CALZADO
GO
CREATE INDEX IX_IDCALZADO ON CALZADO(IDCALZADO)
GO
CREATE INDEX IX_NOMBRE ON CALZADO(NOMBRE)
GO
CREATE INDEX IX_CALZADO ON CALZADO(IDCALZADO,NOMBRE)
GO

-----------INDICE SIN DUPLICADOS PARA CALZADO
CREATE UNIQUE INDEX IX_UNICALZADO ON CALZADO (NOMBRE, IDCATEGORIA,IDTALLA,IDCOLOR,GENERO)

--------------------------------CREACION DE LAS VISTAS--------------------------------------
--------TABLAS NORMALES------
GO
CREATE VIEW VW_CATEGORIA
AS
SELECT * FROM CATEGORIA

GO 
CREATE VIEW VW_COLOR
AS
SELECT * FROM COLOR

GO
CREATE VIEW VW_TALLA
AS
SELECT * FROM TALLA

GO
CREATE VIEW VW_CLIENTE
AS
SELECT * FROM CLIENTE

GO
CREATE VIEW VW_PROVEEDOR
AS
SELECT * FROM PROVEEDOR

GO
CREATE VIEW VW_CALZADO
AS
SELECT * FROM CALZADO

GO
CREATE VIEW VW_INVENTARIO
AS
SELECT * FROM INVENTARIO

GO
CREATE VIEW VW_VENTA
AS
SELECT * FROM VENTA

GO
CREATE VIEW VW_DETALLE
AS
SELECT * FROM DETALLE 

----------TABLAS DE AUDITORIA---------

GO
CREATE VIEW VW_AUDIT_VENTA
AS
SELECT * FROM AUDIT_VENTA

GO
CREATE VIEW VW_AUDIT_DETALLE
AS
SELECT * FROM AUDIT_DETALLE

GO
CREATE VIEW VW_AUDIT_INVENTARIO
AS
SELECT * FROM AUDIT_INVENTARIO

GO
CREATE VIEW VW_AUDIT_CALZADO
AS
SELECT * FROM AUDIT_CALZADO

GO
CREATE VIEW VW_AUDIT_CLIENTE
AS
SELECT * FROM AUDIT_CLIENTE

GO
CREATE VIEW VW_AUDIT_PROVEEDOR
AS
SELECT * FROM AUDIT_PROVEEDOR


-----------------------CREACION DE PROCEDIMIENTOS ALMACENADOS------------------------------
GO
CREATE PROC SP_AUDIT_CONSULTAS
@OPC VARCHAR(3), @COD INT, @FILTRO VARCHAR(50), @TIPO AS VARCHAR(3), @ID AS INT
AS
 IF @OPC='VEN'
 BEGIN
    IF @COD=0 
    BEGIN    
     SELECT V.IDVENTA,C.NOMBRES,V.FREGISTRO,V.SUBTOTAL,V.IVA,V.TOTAL,V.FECHA,V.HORA,V.USUARIO,V.ESTACION,(CASE V.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_VENTA V,VW_CLIENTE C WHERE C.IDCLIENTE=V.IDCLIENTE AND (V.IDVENTA LIKE '%'+ @FILTRO +'%' OR C.NOMBRES LIKE '%'+ @FILTRO +'%')
    END
    ELSE IF @COD=1
    BEGIN
     SELECT V.IDVENTA,C.NOMBRES,V.FREGISTRO,V.SUBTOTAL,V.IVA,V.TOTAL,V.FECHA,V.HORA,V.USUARIO,V.ESTACION,(CASE V.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_VENTA V,VW_CLIENTE C WHERE C.IDCLIENTE=V.IDCLIENTE AND (V.IDVENTA LIKE '%' + @FILTRO + '%')
    END
    ELSE IF @COD=2
    BEGIN
     SELECT V.IDVENTA,C.NOMBRES,V.FREGISTRO,V.SUBTOTAL,V.IVA,V.TOTAL,V.FECHA,V.HORA,V.USUARIO,V.ESTACION,(CASE V.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_VENTA V,VW_CLIENTE C WHERE C.IDCLIENTE=V.IDCLIENTE AND (C.NOMBRES LIKE '%' + @FILTRO + '%')
    END
 END
 IF @OPC='INV'
 BEGIN
    IF @COD=0 
    BEGIN
      IF @TIPO<>'M'    
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND I.TIPO LIKE '%' + @TIPO + '%' AND (I.IDINVENTARIO LIKE '%' + @FILTRO + '%' OR P.RAZONSOCIAL LIKE '%' + @FILTRO + '%' OR C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA
      ELSE
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND (I.TIPO = 'A' OR I.TIPO ='N') AND (I.IDINVENTARIO LIKE '%' + @FILTRO + '%' OR P.RAZONSOCIAL LIKE '%' + @FILTRO + '%' OR C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA
    END
    ELSE IF @COD=1 
    BEGIN
      IF @TIPO<>'M'    
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND I.TIPO LIKE '%' + @TIPO + '%' AND (I.IDINVENTARIO LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA
      ELSE
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND (I.TIPO = 'A' OR I.TIPO ='N') AND (I.IDINVENTARIO LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA 
    END
     ELSE IF @COD=2 
    BEGIN
      IF @TIPO<>'M'    
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND I.TIPO LIKE '%' + @TIPO + '%' AND (P.RAZONSOCIAL LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA 
      ELSE
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND (I.TIPO = 'A' OR I.TIPO ='N') AND (P.RAZONSOCIAL LIKE '%' + @FILTRO + '%' ) ORDER BY I.FECHA, I.HORA
    END
      ELSE IF @COD=3 
    BEGIN
      IF @TIPO<>'M'    
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND I.TIPO LIKE '%' + @TIPO + '%' AND (C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA
      ELSE
        SELECT I.IDINVENTARIO,P.RAZONSOCIAL,C.NOMBRE,I.FREGISTRO,I.CANTIDAD,I.COMENTARIO,I.FECHA,I.HORA,I.USUARIO,I.ESTACION,(CASE I.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_INVENTARIO I,VW_PROVEEDOR P, VW_CALZADO C WHERE I.IDPROVEEDOR=P.IDPROVEEDOR AND I.IDCALZADO=C.IDCALZADO AND (I.TIPO = 'A' OR I.TIPO ='N') AND (C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY I.FECHA, I.HORA
    END
 END
 IF @OPC='CAL'
 BEGIN
    IF @COD=0 
    BEGIN
      IF @TIPO<>'M'    
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND C.TIPO LIKE '%' + @TIPO + '%' AND (C.IDCALZADO LIKE '%' + @FILTRO + '%' OR C.NOMBRE LIKE '%' + @FILTRO + '%' OR CT.DESCRIPCION LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
      ELSE
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,C.TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND (C.TIPO = 'A' OR C.TIPO ='N') AND (C.IDCALZADO LIKE '%' + @FILTRO + '%' OR C.NOMBRE LIKE '%' + @FILTRO + '%' OR CT.DESCRIPCION LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
    END
    ELSE IF @COD=1 
    BEGIN
      IF @TIPO<>'M'    
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND C.TIPO LIKE '%' + @TIPO + '%' AND (C.IDCALZADO LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
      ELSE
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND (C.TIPO = 'A' OR C.TIPO ='N') AND (C.IDCALZADO LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
    END
     ELSE IF @COD=2 
    BEGIN
      IF @TIPO<>'M'    
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND C.TIPO LIKE '%' + @TIPO + '%' AND (C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
      ELSE
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND (C.TIPO = 'A' OR C.TIPO ='N') AND (C.NOMBRE LIKE '%' + @FILTRO + '%' ) ORDER BY C.FECHA,C.HORA
    END
      ELSE IF @COD=3 
    BEGIN
      IF @TIPO<>'M'    
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND C.TIPO LIKE '%' + @TIPO + '%' AND (CT.DESCRIPCION LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
      ELSE
        SELECT C.IDCALZADO,C.NOMBRE,CT.DESCRIPCION,T.NOMBRE,CO.NOMBRE,(CASE WHEN C.GENERO=1 THEN 'MASCULINO' ELSE 'FEMENINO' END),C.PRECIO,C.STOCK,C.FECHA,C.HORA,C.USUARIO,C.ESTACION,(CASE C.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CALZADO C,VW_CATEGORIA CT, VW_TALLA T, VW_COLOR CO WHERE C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=T.IDTALLA AND (C.TIPO = 'A' OR C.TIPO ='N') AND (CT.DESCRIPCION LIKE '%' + @FILTRO + '%') ORDER BY C.FECHA,C.HORA
    END
 END
 IF @OPC='CLI'
 BEGIN
    IF @COD=0 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE TIPO LIKE '%' + @TIPO + '%' AND (IDCLI LIKE '%' + @FILTRO + '%' OR CEDULA LIKE '%' + @FILTRO + '%' OR NOMBRES LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE (TIPO = 'A' OR TIPO ='N') AND (IDCLI LIKE '%' + @FILTRO + '%' OR CEDULA LIKE '%' + @FILTRO + '%' OR NOMBRES LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
    ELSE IF @COD=1 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE TIPO LIKE '%' + @TIPO + '%' AND (IDCLI LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE (TIPO = 'A' OR TIPO ='N') AND (IDCLI LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
     ELSE IF @COD=2 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE TIPO LIKE '%' + @TIPO + '%' AND (CEDULA LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE (TIPO = 'A' OR TIPO ='N') AND (CEDULA LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
      ELSE IF @COD=3 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE TIPO LIKE '%' + @TIPO + '%' AND (NOMBRES LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDCLI,CEDULA,NOMBRES,TELEFONO,EMAIL,(CASE WHEN SEXO=1 THEN 'HOMBRE' ELSE 'MUJER' END) SEXO,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_CLIENTE WHERE (TIPO = 'A' OR TIPO ='N') AND (NOMBRES LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
 END
 IF @OPC='PRO'
 BEGIN
    IF @COD=0 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE TIPO LIKE '%' + @TIPO + '%' AND (IDPROV LIKE '%' + @FILTRO + '%' OR RAZONSOCIAL LIKE '%' + @FILTRO + '%' OR RUC LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE (TIPO = 'A' OR TIPO ='N') AND (IDPROV LIKE '%' + @FILTRO + '%' OR RAZONSOCIAL LIKE '%' + @FILTRO + '%' OR RUC LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
    ELSE IF @COD=1 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE TIPO LIKE '%' + @TIPO + '%' AND (IDPROV LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE (TIPO = 'A' OR TIPO ='N') AND (IDPROV LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
     ELSE IF @COD=2 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE TIPO LIKE '%' + @TIPO + '%' AND (RAZONSOCIAL LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE (TIPO = 'A' OR TIPO ='N') AND (RAZONSOCIAL LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
      ELSE IF @COD=3 
    BEGIN
      IF @TIPO<>'M'    
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE TIPO LIKE '%' + @TIPO + '%' AND (RUC LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
      ELSE
         SELECT IDPROV,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION,FECHA,HORA,USUARIO,ESTACION,(CASE TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_PROVEEDOR WHERE (TIPO = 'A' OR TIPO ='N') AND (RUC LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
 END
 IF @OPC='DET'
 BEGIN
    IF @COD=0 
    BEGIN
         SELECT D.IDVENTA,C.NOMBRE, CT.DESCRIPCION,CAST(CO.NOMBRE AS VARCHAR(100)) COLOR,TA.NOMBRE TALLA,(CASE WHEN C.GENERO=0 THEN 'FEMENINO' ELSE 'MASCULINO' END) GENERO,D.CANTIDAD,D.PRECIO,D.FECHA,D.HORA,D.USUARIO,D.ESTACION,(CASE D.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_DETALLE D,VW_CALZADO C, VW_CATEGORIA CT,VW_COLOR CO,VW_TALLA TA WHERE D.IDCALZADO=C.IDCALZADO AND C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=TA.IDTALLA AND D.IDVENTA =@ID AND(C.NOMBRE LIKE '%' + @FILTRO + '%' OR CT.DESCRIPCION LIKE '%' + @FILTRO + '%' OR CO.NOMBRE LIKE '%' + @FILTRO + '%' OR TA.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
    ELSE IF @COD=1 
    BEGIN
         SELECT D.IDVENTA,C.NOMBRE, CT.DESCRIPCION,CAST(CO.NOMBRE AS VARCHAR(100)) COLOR,TA.NOMBRE TALLA,(CASE WHEN C.GENERO=0 THEN 'FEMENINO' ELSE 'MASCULINO' END) GENERO,D.CANTIDAD,D.PRECIO,D.FECHA,D.HORA,D.USUARIO,D.ESTACION,(CASE D.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_DETALLE D,VW_CALZADO C, VW_CATEGORIA CT,VW_COLOR CO,VW_TALLA TA WHERE D.IDCALZADO=C.IDCALZADO AND C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=TA.IDTALLA AND D.IDVENTA =@ID AND(C.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
     ELSE IF @COD=2 
    BEGIN
         SELECT D.IDVENTA,C.NOMBRE, CT.DESCRIPCION,CAST(CO.NOMBRE AS VARCHAR(100)) COLOR,TA.NOMBRE TALLA,(CASE WHEN C.GENERO=0 THEN 'FEMENINO' ELSE 'MASCULINO' END) GENERO,D.CANTIDAD,D.PRECIO,D.FECHA,D.HORA,D.USUARIO,D.ESTACION,(CASE D.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_DETALLE D,VW_CALZADO C, VW_CATEGORIA CT,VW_COLOR CO,VW_TALLA TA WHERE D.IDCALZADO=C.IDCALZADO AND C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=TA.IDTALLA AND D.IDVENTA =@ID AND(CT.DESCRIPCION LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
     ELSE IF @COD=3 
    BEGIN
         SELECT D.IDVENTA,C.NOMBRE, CT.DESCRIPCION,CAST(CO.NOMBRE AS VARCHAR(100)) COLOR,TA.NOMBRE TALLA,(CASE WHEN C.GENERO=0 THEN 'FEMENINO' ELSE 'MASCULINO' END) GENERO,D.CANTIDAD,D.PRECIO,D.FECHA,D.HORA,D.USUARIO,D.ESTACION,(CASE D.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_DETALLE D,VW_CALZADO C, VW_CATEGORIA CT,VW_COLOR CO,VW_TALLA TA WHERE D.IDCALZADO=C.IDCALZADO AND C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=TA.IDTALLA AND D.IDVENTA =@ID AND(CO.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
     ELSE IF @COD=4
    BEGIN
         SELECT D.IDVENTA,C.NOMBRE, CT.DESCRIPCION,CAST(CO.NOMBRE AS VARCHAR(100)) COLOR,TA.NOMBRE TALLA,(CASE WHEN C.GENERO=0 THEN 'FEMENINO' ELSE 'MASCULINO' END) GENERO,D.CANTIDAD,D.PRECIO,D.FECHA,D.HORA,D.USUARIO,D.ESTACION,(CASE D.TIPO WHEN 'I' THEN 'REGISTRADO' WHEN 'D' THEN 'ELIMINADO' WHEN 'A' THEN 'ANTIGUO' WHEN 'N' THEN 'NUEVO' END) TIPO FROM VW_AUDIT_DETALLE D,VW_CALZADO C, VW_CATEGORIA CT,VW_COLOR CO,VW_TALLA TA WHERE D.IDCALZADO=C.IDCALZADO AND C.IDCATEGORIA=CT.IDCATEGORIA AND C.IDCOLOR=CO.IDCOLOR AND C.IDTALLA=TA.IDTALLA AND D.IDVENTA =@ID AND(TA.NOMBRE LIKE '%' + @FILTRO + '%') ORDER BY FECHA,HORA
    END
 END


 
GO
CREATE PROC SP_CATEGORIA
@OPC VARCHAR(3), @ID INT, @DESC VARCHAR(50) 
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO CATEGORIA VALUES(@DESC)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE CATEGORIA SET DESCRIPCION=@DESC WHERE IDCATEGORIA=@ID
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM CATEGORIA WHERE IDCATEGORIA=@ID
END
  COMMIT TRANSACTION
 END TRY
BEGIN CATCH
  SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
  IF @NUMERO=2627
  BEGIN
SET @MENSAJE='Este dato ya existe'
  END
  ELSE IF @NUMERO=547
  BEGIN
  SET @MENSAJE='Dato con dependencia'
  END 
  ROLLBACK TRANSACTION
  RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 

GO
CREATE PROC SP_COLOR
@OPC VARCHAR(3), @ID INT, @NOM VARCHAR(50)
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO COLOR VALUES(@NOM)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE COLOR SET NOMBRE=@NOM WHERE IDCOLOR=@ID
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM COLOR WHERE IDCOLOR=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 


GO
CREATE PROC SP_TALLA
@OPC VARCHAR(3), @ID INT, @NOM VARCHAR(50)
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO TALLA VALUES(@NOM)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE TALLA SET NOMBRE=@NOM WHERE IDTALLA=@ID
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM TALLA WHERE IDTALLA=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 

GO
CREATE PROC SP_PROVEEDOR
@OPC VARCHAR(3), @ID INT, @RAZ VARCHAR(50), @RUC VARCHAR(13), 
@TEL VARCHAR(10), @EMAIL VARCHAR(30), @DIR VARCHAR(50)
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO PROVEEDOR VALUES(@RAZ,@RUC,@TEL,@EMAIL,@DIR)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE PROVEEDOR SET RAZONSOCIAL=@RAZ,RUC=@RUC,TELEFONO=@TEL,EMAIL=@EMAIL,DIRECCION=@DIR WHERE IDPROVEEDOR=@ID
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM PROVEEDOR WHERE IDPROVEEDOR=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 


GO
CREATE PROC SP_CLIENTE
@OPC VARCHAR(3), @ID INT, @CED VARCHAR(10), @NOM VARCHAR(50), 
@TEL VARCHAR(10), @EMAIL VARCHAR(30), @SEX BIT
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO CLIENTE VALUES(@CED,@NOM,@TEL,@EMAIL,@SEX)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE CLIENTE SET CEDULA=@CED,NOMBRES=@NOM,TELEFONO=@TEL,EMAIL=@EMAIL,SEXO=@SEX WHERE IDCLIENTE=@ID
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM CLIENTE WHERE IDCLIENTE=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 

GO
CREATE PROC SP_CALZADO
@OPC VARCHAR(3), @ID INT, @NOM VARCHAR(100), @IDCAT INT, 
@IDTAL INT, @IDCOL INT, @GEN BIT, @PREC REAL, @STOCK INT
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO CALZADO VALUES(@NOM,@IDCAT,@IDTAL,@IDCOL,@GEN,ROUND(@PREC,2),@STOCK)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE CALZADO SET NOMBRE=@NOM,IDCATEGORIA= @IDCAT,IDTALLA= @IDTAL,IDCOLOR= @IDCOL,GENERO= @GEN,PRECIO= ROUND(@PREC,2),STOCK= @STOCK WHERE IDCALZADO= @ID 
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM CALZADO WHERE IDCALZADO=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627 or @NUMERO=2601
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 


GO
CREATE PROC SP_INVENTARIO
@OPC VARCHAR(3), @ID INT, @IDPROV INT, @IDCAL INT, @CANT INT,@COM VARCHAR(100)
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO INVENTARIO VALUES(@IDPROV,@IDCAL,GETDATE(),@CANT,@COM)
END
ELSE IF @OPC='MOD'
BEGIN
UPDATE INVENTARIO SET IDPROVEEDOR=@IDPROV,IDCALZADO=@IDCAL ,FREGISTRO=GETDATE(), CANTIDAD=@CANT,COMENTARIO=@COM WHERE IDINVENTARIO= @ID 
END
ELSE IF @OPC='ELI'
BEGIN
DELETE FROM INVENTARIO WHERE IDINVENTARIO=@ID
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
  SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 



GO
CREATE PROC SP_VENTA
@OPC VARCHAR(3), @ID INT, @IDCLI INT, @SUBT REAL, @IVA REAL, @TOTAL REAL
AS
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO VENTA VALUES(@IDCLI,GETDATE(),ROUND(@SUBT,2),ROUND(@IVA,2),ROUND(@TOTAL,2))
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 


GO
CREATE PROC SP_DETALLE
@OPC VARCHAR(3), @IDVENT INT, @IDCAL INT, @CANT INT, @PREC REAL
AS
DECLARE @IDVENTA INT=(SELECT ISNULL(MAX(IDVENTA),0) FROM VENTA)
DECLARE @MENSAJE VARCHAR(80)
DECLARE @NUMERO INT
DECLARE @ERRORSEVERETY INT
DECLARE @ERRORSTATE INT 
BEGIN TRY
  BEGIN TRANSACTION
IF @OPC='INS'
BEGIN
INSERT INTO DETALLE VALUES(@IDVENTA,@IDCAL,@CANT,ROUND(@PREC,2))
END
COMMIT TRANSACTION
 END TRY
BEGIN CATCH
SELECT @NUMERO = ERROR_NUMBER(),@ERRORSEVERETY = ERROR_SEVERITY(),@ERRORSTATE = ERROR_STATE()
 IF @NUMERO=2627
 BEGIN
SET @MENSAJE='Este dato ya existe'
 END
 ELSE IF @NUMERO=547
 BEGIN
 SET @MENSAJE='Dato con dependencia'
 END 
 ROLLBACK TRANSACTION
 RAISERROR(@MENSAJE,@ERRORSEVERETY,@ERRORSTATE)
END CATCH 


------------------------TRIGGER PARA LAS TABLAS DE AUDITORIA-------------------------------
GO 
CREATE TRIGGER TR_CATEGORIA
ON CATEGORIA
AFTER INSERT, DELETE, UPDATE
AS
 DECLARE @ID_I INT
 DECLARE @DESC_I VARCHAR(50)
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
 BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDCATEGORIA,@DESC_I=DESCRIPCION FROM deleted
  INSERT INTO AUDIT_CATEGORIA VALUES(@ID_I,@DESC_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDCATEGORIA,@DESC_I=DESCRIPCION FROM inserted
  INSERT INTO AUDIT_CATEGORIA VALUES(@ID_I,@DESC_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
  COMMIT TRANSACTION
 END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
 BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CAT CURSOR FOR SELECT IDCATEGORIA,DESCRIPCION FROM INSERTED 
  OPEN CUR_CAT
  FETCH CUR_CAT INTO @ID_I,@DESC_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CATEGORIA VALUES(@ID_I,@DESC_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_CAT INTO @ID_I,@DESC_I
  END
CLOSE CUR_CAT
DEALLOCATE CUR_CAT
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CAT
  DEALLOCATE CUR_CAT
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
 BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CAT CURSOR FOR SELECT IDCATEGORIA,DESCRIPCION FROM DELETED 
  OPEN CUR_CAT
  FETCH CUR_CAT INTO @ID_I,@DESC_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CATEGORIA VALUES(@ID_I,@DESC_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_CAT INTO @ID_I,@DESC_I
  END
CLOSE CUR_CAT
DEALLOCATE CUR_CAT
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CAT
  DEALLOCATE CUR_CAT
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END


GO 
CREATE TRIGGER TR_COLOR
ON COLOR
AFTER INSERT, DELETE, UPDATE
AS
  DECLARE @ID_I INT
  DECLARE @NOM_I VARCHAR(20)
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDCOLOR,@NOM_I=NOMBRE FROM deleted
  INSERT INTO AUDIT_COLOR VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDCOLOR,@NOM_I=NOMBRE FROM inserted
  INSERT INTO AUDIT_COLOR VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
 COMMIT TRANSACTION
 END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_COL CURSOR FOR SELECT IDCOLOR,NOMBRE FROM INSERTED 
  OPEN CUR_COL
  FETCH CUR_COL INTO @ID_I,@NOM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_COLOR VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_COL INTO @ID_I,@NOM_I
END
CLOSE CUR_COL
DEALLOCATE CUR_COL
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_COL
  DEALLOCATE CUR_COL
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_COL CURSOR FOR SELECT IDCOLOR,NOMBRE FROM DELETED 
  OPEN CUR_COL
  FETCH CUR_COL INTO @ID_I,@NOM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_COLOR VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_COL INTO @ID_I,@NOM_I
END
CLOSE CUR_COL
DEALLOCATE CUR_COL
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_COL
  DEALLOCATE CUR_COL
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END


GO 
CREATE TRIGGER TR_TALLA
ON TALLA
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @NOM_I VARCHAR(20)
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDTALLA,@NOM_I=NOMBRE FROM deleted
  INSERT INTO AUDIT_TALLA VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDTALLA,@NOM_I=NOMBRE FROM inserted
  INSERT INTO AUDIT_TALLA VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
 COMMIT TRANSACTION
 END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_TAL CURSOR FOR SELECT IDTALLA,NOMBRE FROM INSERTED 
  OPEN CUR_TAL
  FETCH CUR_TAL INTO @ID_I,@NOM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_TALLA VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_TAL INTO @ID_I,@NOM_I
  END
CLOSE CUR_TAL
DEALLOCATE CUR_TAL
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_TAL
  DEALLOCATE CUR_TAL
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH

END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
 BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_TAL CURSOR FOR SELECT IDTALLA,NOMBRE FROM DELETED 
  OPEN CUR_TAL
  FETCH CUR_TAL INTO @ID_I,@NOM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_TALLA VALUES(@ID_I,@NOM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_TAL INTO @ID_I,@NOM_I
  END
CLOSE CUR_TAL
DEALLOCATE CUR_TAL
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_TAL
  DEALLOCATE CUR_TAL
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END


GO 
CREATE TRIGGER TR_PROVEEDOR
ON PROVEEDOR
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @RAZ_I VARCHAR(50)
DECLARE @RUC_I VARCHAR(13) 
DECLARE @TEL_I VARCHAR(10) 
DECLARE @EMAIL_I VARCHAR(30) 
DECLARE @DIR_I VARCHAR(50)
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDPROVEEDOR,@RAZ_I=RAZONSOCIAL,@RUC_I=RUC,@TEL_I=TELEFONO,@EMAIL_I=EMAIL,@DIR_I=DIRECCION FROM deleted
  INSERT INTO AUDIT_PROVEEDOR VALUES(@ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDPROVEEDOR,@RAZ_I=RAZONSOCIAL,@RUC_I=RUC,@TEL_I=TELEFONO,@EMAIL_I=EMAIL,@DIR_I=DIRECCION FROM inserted
  INSERT INTO AUDIT_PROVEEDOR VALUES(@ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
  COMMIT TRANSACTION
END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_PRO CURSOR FOR SELECT IDPROVEEDOR,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION FROM INSERTED 
  OPEN CUR_PRO
  FETCH CUR_PRO INTO @ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_PROVEEDOR VALUES(@ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_PRO INTO @ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I
  END
CLOSE CUR_PRO
DEALLOCATE CUR_PRO
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_PRO
  DEALLOCATE CUR_PRO
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_PRO CURSOR FOR SELECT IDPROVEEDOR,RAZONSOCIAL,RUC,TELEFONO,EMAIL,DIRECCION FROM DELETED 
  OPEN CUR_PRO
  FETCH CUR_PRO INTO @ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_PROVEEDOR VALUES(@ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_PRO INTO @ID_I,@RAZ_I,@RUC_I,@TEL_I,@EMAIL_I,@DIR_I
  END
CLOSE CUR_PRO
DEALLOCATE CUR_PRO
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_PRO
  DEALLOCATE CUR_PRO
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END


GO 
CREATE TRIGGER TR_CLIENTE
ON CLIENTE
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @CED_I VARCHAR(10)
DECLARE @NOM_I VARCHAR(50) 
DECLARE @TEL_I VARCHAR(10) 
DECLARE @EMAIL_I VARCHAR(30) 
DECLARE @SEX_I BIT
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDCLIENTE,@CED_I=CEDULA,@NOM_I=NOMBRES,@TEL_I=TELEFONO,@EMAIL_I=EMAIL,@SEX_I=SEXO FROM deleted
  INSERT AUDIT_CLIENTE VALUES(@ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDCLIENTE,@CED_I=CEDULA,@NOM_I=NOMBRES,@TEL_I=TELEFONO,@EMAIL_I=EMAIL,@SEX_I=SEXO FROM inserted
  INSERT INTO AUDIT_CLIENTE VALUES(@ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
  COMMIT TRANSACTION
END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CLI CURSOR FOR SELECT IDCLIENTE,CEDULA,NOMBRES,TELEFONO,EMAIL,SEXO FROM INSERTED 
  OPEN CUR_CLI
  FETCH CUR_CLI INTO @ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CLIENTE VALUES(@ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_CLI INTO @ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I
  END
CLOSE CUR_CLI
DEALLOCATE CUR_CLI
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CLI
  DEALLOCATE CUR_CLI
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CLI CURSOR FOR SELECT IDCLIENTE,CEDULA,NOMBRES,TELEFONO,EMAIL,SEXO FROM DELETED 
  OPEN CUR_CLI
  FETCH CUR_CLI INTO @ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CLIENTE VALUES(@ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_CLI INTO @ID_I,@CED_I,@NOM_I,@TEL_I,@EMAIL_I,@SEX_I
  END
CLOSE CUR_CLI
DEALLOCATE CUR_CLI
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CLI
  DEALLOCATE CUR_CLI
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END


GO 
CREATE TRIGGER TR_CALZADO
ON CALZADO
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @NOM_I VARCHAR(100)
DECLARE @IDCAT_I INT
DECLARE @IDTAL_I INT
DECLARE @IDCOL_I INT
DECLARE @GEN_I BIT
DECLARE @PREC_I REAL
DECLARE @STOCK_I REAL
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDCALZADO,@NOM_I=NOMBRE,@IDCAT_I=IDCATEGORIA,@IDTAL_I=IDTALLA,@IDCOL_I=IDCOLOR,@GEN_I=GENERO,@PREC_I=PRECIO,@STOCK_I=STOCK FROM deleted
  INSERT AUDIT_CALZADO VALUES(@ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  SELECT @ID_I=IDCALZADO,@NOM_I=NOMBRE,@IDCAT_I=IDCATEGORIA,@IDTAL_I=IDTALLA,@IDCOL_I=IDCOLOR,@GEN_I=GENERO,@PREC_I=PRECIO,@STOCK_I=STOCK FROM inserted
  INSERT INTO AUDIT_CALZADO VALUES(@ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
  COMMIT TRANSACTION
END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CALZ CURSOR FOR SELECT IDCALZADO,NOMBRE,IDCATEGORIA,IDTALLA,IDCOLOR,GENERO,PRECIO,STOCK FROM INSERTED 
  OPEN CUR_CALZ
  FETCH CUR_CALZ INTO @ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CALZADO VALUES(@ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  FETCH CUR_CALZ INTO @ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I
  END
CLOSE CUR_CALZ
DEALLOCATE CUR_CALZ
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CALZ
  DEALLOCATE CUR_CALZ
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_CALZ CURSOR FOR SELECT IDCALZADO,NOMBRE,IDCATEGORIA,IDTALLA,IDCOLOR,GENERO,PRECIO,STOCK FROM DELETED 
  OPEN CUR_CALZ
  FETCH CUR_CALZ INTO @ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT INTO AUDIT_CALZADO VALUES(@ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  FETCH CUR_CALZ INTO @ID_I,@NOM_I,@IDCAT_I,@IDTAL_I,@IDCOL_I,@GEN_I,@PREC_I,@STOCK_I
  END
CLOSE CUR_CALZ
DEALLOCATE CUR_CALZ
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_CALZ
  DEALLOCATE CUR_CALZ
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END

GO 
CREATE TRIGGER TR_INVENTARIO
ON INVENTARIO
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @IDPRO_I INT
DECLARE @IDCAL_I INT 
DECLARE @FREG_I DATE
DECLARE @CANT_I INT
DECLARE @COM_I VARCHAR(100)

IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  SELECT @ID_I=IDINVENTARIO,@IDPRO_I=IDPROVEEDOR,@IDCAL_I=IDCALZADO,@FREG_I=FREGISTRO,@CANT_I=CANTIDAD,@COM_I=COMENTARIO FROM DELETED
  INSERT AUDIT_INVENTARIO VALUES(@ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'A')
  UPDATE CALZADO SET STOCK= (STOCK-@CANT_I) WHERE IDCALZADO= @IDCAL_I 
  SELECT @ID_I=IDINVENTARIO,@IDPRO_I=IDPROVEEDOR,@IDCAL_I=IDCALZADO,@FREG_I=FREGISTRO,@CANT_I=CANTIDAD,@COM_I=COMENTARIO FROM INSERTED
  INSERT AUDIT_INVENTARIO VALUES(@ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'N')
  UPDATE CALZADO SET STOCK= (STOCK+@CANT_I) WHERE IDCALZADO= @IDCAL_I 
  COMMIT TRANSACTION
END TRY
BEGIN CATCH
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
  DECLARE CUR_INV CURSOR FOR SELECT IDINVENTARIO,IDPROVEEDOR,IDCALZADO,FREGISTRO,CANTIDAD,COMENTARIO FROM INSERTED
  OPEN CUR_INV
  FETCH CUR_INV INTO @ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT AUDIT_INVENTARIO VALUES(@ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'I')
  UPDATE CALZADO SET STOCK= (STOCK+@CANT_I) WHERE IDCALZADO= @IDCAL_I 
  FETCH CUR_INV INTO @ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I
  END
CLOSE CUR_INV
DEALLOCATE CUR_INV
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_INV
  DEALLOCATE CUR_INV
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
 BEGIN TRANSACTION
  DECLARE CUR_INV CURSOR FOR SELECT IDINVENTARIO,IDPROVEEDOR,IDCALZADO,FREGISTRO,CANTIDAD,COMENTARIO FROM DELETED
  OPEN CUR_INV
  FETCH CUR_INV INTO @ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I
  WHILE @@FETCH_STATUS = 0
  BEGIN
  INSERT AUDIT_INVENTARIO VALUES(@ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I,
  CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
  HOST_NAME(),'D')
  UPDATE CALZADO SET STOCK= (STOCK-@CANT_I) WHERE IDCALZADO= @IDCAL_I 
  FETCH CUR_INV INTO @ID_I,@IDPRO_I,@IDCAL_I,@FREG_I,@CANT_I,@COM_I
  END
 CLOSE CUR_INV
DEALLOCATE CUR_INV
COMMIT TRANSACTION
END TRY
BEGIN CATCH
  CLOSE CUR_INV
  DEALLOCATE CUR_INV
  ROLLBACK TRANSACTION
  SELECT ERROR_MESSAGE()
END CATCH
END



GO 
CREATE TRIGGER TR_VENTA
ON VENTA
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @ID_I INT
DECLARE @IDCLI_I INT
DECLARE @FREG_I DATE  
DECLARE @SUBTO_I REAL 
DECLARE @IVA_I REAL
DECLARE @TOTAL_I REAL 
IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   SELECT @ID_I=IDVENTA,@IDCLI_I=IDCLIENTE,@FREG_I=FREGISTRO,@SUBTO_I=SUBTOTAL,@IVA_I=IVA,@TOTAL_I=TOTAL FROM deleted
   INSERT AUDIT_VENTA VALUES(@ID_I,@IDCLI_I,@FREG_I,ROUND(@SUBTO_I,2),ROUND(@IVA_I,2),ROUND(@TOTAL_I,2),
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'A')
   SELECT @ID_I=IDVENTA,@IDCLI_I=IDCLIENTE,@FREG_I=FREGISTRO,@SUBTO_I=SUBTOTAL,@IVA_I=IVA,@TOTAL_I=TOTAL FROM inserted
   INSERT AUDIT_VENTA VALUES(@ID_I,@IDCLI_I,@FREG_I,ROUND(@SUBTO_I,2),ROUND(@IVA_I,2),ROUND(@TOTAL_I,2),
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'N')
  COMMIT TRANSACTION
END TRY
BEGIN CATCH
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   DECLARE CUR_VENT CURSOR FOR SELECT IDVENTA,IDCLIENTE,FREGISTRO,SUBTOTAL,IVA,TOTAL FROM INSERTED
   OPEN CUR_VENT
   FETCH CUR_VENT INTO @ID_I,@IDCLI_I,@FREG_I,@SUBTO_I,@IVA_I,@TOTAL_I
   WHILE @@FETCH_STATUS = 0
   BEGIN
   INSERT AUDIT_VENTA VALUES(@ID_I,@IDCLI_I,@FREG_I,ROUND(@SUBTO_I,2),ROUND(@IVA_I,2),ROUND(@TOTAL_I,2),
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'I')
   FETCH CUR_VENT INTO @ID_I,@IDCLI_I,@FREG_I,@SUBTO_I,@IVA_I,@TOTAL_I
   END
  CLOSE CUR_VENT
  DEALLOCATE CUR_VENT
COMMIT TRANSACTION
END TRY
BEGIN CATCH
   CLOSE CUR_VENT
   DEALLOCATE CUR_VENT
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   DECLARE CUR_VENT CURSOR FOR SELECT IDVENTA,IDCLIENTE,FREGISTRO,SUBTOTAL,IVA,TOTAL FROM DELETED
   OPEN CUR_VENT
   FETCH CUR_VENT INTO @ID_I,@IDCLI_I,@FREG_I,@SUBTO_I,@IVA_I,@TOTAL_I
   WHILE @@FETCH_STATUS = 0
   BEGIN
   INSERT AUDIT_VENTA VALUES(@ID_I,@IDCLI_I,@FREG_I,ROUND(@SUBTO_I,2),ROUND(@IVA_I,2),ROUND(@TOTAL_I,2),
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'D')
   FETCH CUR_VENT INTO @ID_I,@IDCLI_I,@FREG_I,@SUBTO_I,@IVA_I,@TOTAL_I
   END
  CLOSE CUR_VENT
  DEALLOCATE CUR_VENT
COMMIT TRANSACTION
END TRY
BEGIN CATCH
   CLOSE CUR_VENT
   DEALLOCATE CUR_VENT
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH
END


GO 
CREATE TRIGGER TR_DETALLE
ON DETALLE
AFTER INSERT, DELETE, UPDATE
AS
DECLARE @IDVENT_I INT
DECLARE @IDCAL_I INT
DECLARE @CANT_I INT  
DECLARE @PREC_I REAL 

IF EXISTS (SELECT * FROM inserted) AND EXISTS (SELECT * FROM deleted)--ACTUALIZADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   SELECT @IDVENT_I=IDVENTA,@IDCAL_I=IDCALZADO,@CANT_I=CANTIDAD,@PREC_I=PRECIO FROM deleted
   INSERT AUDIT_DETALLE VALUES(@IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I,
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'A')
   UPDATE CALZADO SET STOCK= (STOCK+@CANT_I) WHERE IDCALZADO= @IDCAL_I 
   SELECT @IDVENT_I=IDVENTA,@IDCAL_I=IDCALZADO,@CANT_I=CANTIDAD,@PREC_I=PRECIO FROM inserted
   INSERT AUDIT_DETALLE VALUES(@IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I,
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'N')
   UPDATE CALZADO SET STOCK= (STOCK-@CANT_I) WHERE IDCALZADO= @IDCAL_I 
COMMIT TRANSACTION
END TRY
BEGIN CATCH
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH 
END
 ELSE IF EXISTS(SELECT * FROM inserted)AND NOT EXISTS (SELECT * FROM deleted)--INSERCION
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   DECLARE CUR_DET CURSOR FOR SELECT IDVENTA,IDCALZADO,CANTIDAD,PRECIO FROM INSERTED
   OPEN CUR_DET
   FETCH CUR_DET INTO @IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I
   WHILE @@FETCH_STATUS = 0
   BEGIN
   INSERT AUDIT_DETALLE VALUES(@IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I,
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'I')
   UPDATE CALZADO SET STOCK= (STOCK-@CANT_I) WHERE IDCALZADO= @IDCAL_I 
   FETCH CUR_DET INTO @IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I
   END
CLOSE CUR_DET
DEALLOCATE CUR_DET
COMMIT TRANSACTION
END TRY
BEGIN CATCH
   CLOSE CUR_DET
   DEALLOCATE CUR_DET
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH
END
 ELSE IF NOT EXISTS (SELECT * FROM inserted) AND EXISTS(SELECT * FROM deleted)--BORRADO
BEGIN
BEGIN TRY
  BEGIN TRANSACTION
   DECLARE CUR_DET CURSOR FOR SELECT IDVENTA,IDCALZADO,CANTIDAD,PRECIO FROM DELETED
   OPEN CUR_DET
   FETCH CUR_DET INTO @IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I
   WHILE @@FETCH_STATUS = 0
   BEGIN
   INSERT AUDIT_DETALLE VALUES(@IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I,
   CONVERT (date, GETDATE()),CONVERT (TIME, GETDATE()),SYSTEM_USER,
   HOST_NAME(),'D')
   UPDATE CALZADO SET STOCK= (STOCK+@CANT_I) WHERE IDCALZADO= @IDCAL_I 
   FETCH CUR_DET INTO @IDVENT_I,@IDCAL_I,@CANT_I,@PREC_I
   END
CLOSE CUR_DET
DEALLOCATE CUR_DET
COMMIT TRANSACTION
END TRY
BEGIN CATCH
   CLOSE CUR_DET
   DEALLOCATE CUR_DET
   ROLLBACK TRANSACTION
   SELECT ERROR_MESSAGE()
END CATCH
END


--------------------------CREACION DE USUARIO------------------------------
GO
USE MASTER
--INICIO DE SESION
GO
CREATE LOGIN ADMINISTRADOR WITH PASSWORD='Admin'
--USAR LA BASE DE DATOS QUE SE VA A TENER UN USUARIO
GO
USE VENTA_MERCADERIA
--CREAR UN USUARIO PARA ESTA BASE DE DATOS
GO
CREATE USER ADMINISTRADOR FOR LOGIN ADMINISTRADOR